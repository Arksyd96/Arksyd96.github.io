[
    {
        "title": "C-RNN for licence plates OCR",
        "description": "Characters recognition from license plates using convolutional recurrent neural networks.",
        "tags": ["Python", "Keras", "Numpy", "CRNN"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988458600781451284/ocr.png",
        "link": "https://github.com/Arksyd96/ocr-license-plates-crnn/blob/master/text-from-image-ocr.ipynb"
    },
    {
        "title": "Aerial-to-topographic image translation (cGAN)",
        "description": "Implementation of a pix2pix model that translates aerial images to topographic maps.",
        "tags": ["Tensorflow", "Numpy", "GAN", "Image translation"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988458671136735344/pix2pix.png",
        "link": "https://github.com/Arksyd96/aerial-to-topographic-pix2pix"
    },
    {
        "title": "Neural network from scratch",
        "description": "Implementation of two hidden layers neural network from scratch using Numpy only.",
        "tags": ["Python", "Numpy"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988460047266893884/nn.jpg",
        "link": "https://github.com/Arksyd96/anomaly-detection-autoencoder/blob/master/Anomaly-detection.ipynb"
    },
    {
        "title": "Selective search algorithm",
        "description": "Region proposal algorithm used for object detection, based on computing groupings color, texture, size, and shape similarities.",
        "tags": ["Object detection", "Numpy"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988458645996052540/ssa.jpg",
        "link": "https://colab.research.google.com/drive/1TXAlsIeNYknt2GZ99i6KcV0PH9r-nvBw?usp=sharing"
    },
    {
        "title": "English to French text translator using LSTMs",
        "description": "Implementation of a sequence-to-sequence LSTM model for text translation using Keras (Word-based model).",
        "tags": ["Python", "Keras", "LSTM"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988458696566788116/text_translator.jpg",
        "link": "https://github.com/Arksyd96/text-translation-with-lstm"
    },
    {
        "title": "MNIST Anomaly detection using Tensorflow and Keras",
        "description": "Implementation of an Autoencoder for the detection of anomalies and outliers in a dataset.",
        "tags": ["Computer vision", "Keras", "Autoencoders"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988458428248768562/ANOMALY.jpg",
        "link": "#"
    },
    {
        "title": "Content based image retrieval with Keras",
        "description": "Autoencoder implementation of content-based image retrieval. They are used by search engines to retrieve similar images.",
        "tags": ["Python", "Keras", "Autoencoders"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988458529390219294/image-retrieval.png",
        "link": "https://github.com/Arksyd96/content-based-image-retrieval-keras/blob/master/content-based-image-retrieval-autoencoders.ipynb"
    },
    {
        "title": "Denoising autoencoder with Keras",
        "description": "Implementation of a DAE. Removes noise from an image by shrinking it into latent space and reconstructing it.",
        "tags": ["Python", "Keras", "Autoencoders"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988458469441032272/dae.png",
        "link": "https://github.com/Arksyd96/denoising-autoencoder-keras/blob/master/Denoising-autoencoder-keras.ipynb"
    },
    {
        "title": "Implementation of a perceptron for logistic regression",
        "description": "Binary image classification using a single neuron model (Perceptron).",
        "tags": ["Python", "Numpy", "Neural networks"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988459558257172510/Perceptron.jpg",
        "link": "https://nbviewer.jupyter.org/github/Arksyd96/perceptron_implementation_for_logistic_regression/blob/master/perceptron_implementation_for_logistic_regression.ipynb"
    },
    {
        "title": "Multilinear regression with NumPy",
        "description": "Implementation of a gradient descent regression for a multilinear regression model using NumPy (Fully vectorized).",
        "tags": ["Python", "Numpy", "Regression"],
        "thumbnail": "https://cdn.discordapp.com/attachments/988456762212499466/988458580535550002/nn.jpg",
        "link": "http://localhost:3000/blog/multivariate_linear_regression_numpy"
    }
]